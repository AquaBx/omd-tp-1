@startuml
class Acteur {
}

class Réalisateur {
}

abstract class Personne {
    - nom : String
    - prénom : String
    + getNom() : String
    + getPrénom() : String
    + setNom(String nom) : void
    + setPrénom(String prénom) : void
}

class Film {
    - titre : String
    - réalisateur : Réalisateur
    - acteurs : List<Acteur>
    - durée : Duration
    - publicVisé : String
    + getTitre() : String
    + getRéalisateur() : Réalisateur
    + getActeurs() : List<Acteur>
    + getDurée() : Duration
    + getPublicVisé() : String
}

class ClientConnecté {
    - adresseMail : String
    - dateDeNaissance : Date
    - motDePasse : String
    - id : String
    - points : int

    + getAdresseMail() : String
    + getDateDeNaissance() : Date
    + getMotDePasse() : String
    + getId() : int
    + getPoints() : int

    + setAdresseMail(String email) : void
    + setPoints(int points) : void
    + setMotDePasse(String password) : void


    + consulterFilms() : List<Film>
    + reserver() : void
    + seDéconnecter() : void
}

class ClientNonConnecté {
    + seConnecter(int id, String password) : void
    + seConnecter(String email, String password) : void
    + créerUnCompte(String nom, String prénom, String mail, Date dateDeNaissance, String motDePasse) : void
}

Personne <|-- Réalisateur
Personne <|-- Acteur
ClientConnecté --|> Personne

class Employé {
    + consulterRéservation(r : Réservation) : void
}

class MembreDuPersonnel {
    + créerSéance(f : Film, s : Salle, horaireDébut : Date, horaireFin : Date) : void
}

abstract class Salle {
    - nom : String
    - prixPlace : double
    - nbPlaces : int
    + getNom() : String
    + getType() : String
    + getNbPlaces() : int
}

class Cinema {
    - nom : String
    - adresse : String
    - numeroTelephone : String
    - horairesOuverture : String
    - filmsProjetes : list<Film>

    - employés : list<Employé>
    - personnel : list<MembreDuPersonnel>

    + getFilmsProjetes()
    + setFilmsProjetes()
}

Salle <|-- Dolby
Salle <|-- 3D
Salle <|- Standard

class Réservation {
    - places : List<Place>
    - séance : Séance
    - client : Client

    + getPlaces() : List<Place>
    + getNbPlaces() : int
    + getSéance() : Séance
    + getClient() : Client
}

class Place {
    - reduction : Float
    + getReduction()
}
class PlaceEtudiant {}
class PlaceMobiliteReduite {}
class PlaceChomeur {}
class PlaceSenior {}

Place <|-- PlaceEtudiant
Place <|-- PlaceChomeur
Place <|- PlaceSenior
PlaceMobiliteReduite -|> Place

class Séance {
    - horaireDébut : Date
    - horaireFin : Date
    - nbPlacesRéservées : int

    + getHoraireDébut() : Date
    + getHoraireFin() : Date
    + getNbPlacesRéservées() : int
}

Film "1" -o "0..*" Séance

Acteur "1..*" --o "1..*" Film
Réalisateur "1..*" --o "1" Film

Cinema "1" *--- "1..*" Employé
Cinema "1" *-- "1..*" Salle
Cinema "1" *-- "1..*" Film
Cinema  "1" *-- "1..*" MembreDuPersonnel

Séance "0..*" o- "1" Salle

MembreDuPersonnel -- Séance
Employé - Réservation

Séance "0..*" -- "0..*" ClientConnecté
Réservation .. (ClientConnecté,Séance)

ClientConnecté -- Film

ClientConnecté - ClientNonConnecté

Réservation "1" *-- "1..*" Place
@enduml